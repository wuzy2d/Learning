
### Reading multiple data files
  filenames = ['sales-jan-2015.csv','sales-feb-2015.csv']
  dataframes = []
  for f in filenames:
    dataframes.append(pd.read_csv(f))
  
  dataframe = [pd.read_csv(f) for f in filenames]
  
  from glob import glob
  filenames = glob('sales*.csv')
  dataframe = [pd.read_csv(f) for f in filenames]
  
### Reindexing DataFrames
  w_mean = pd.read_csv('file.csv',index_col = 'column1')
  
  ordered = ['Jan','Apr','Jul','Oct]
  w_mean2 = w_mean.reindex(ordered)
  w_mean.reindex(w_max.index)
  
### Arithmetic with Series & DataFrames
  week1_range.divide(week1_mean, axis='rows')
  week1_mean.pct_change()*100
  bronze + silver
  bronze.add(silver, fill_value=0)
  bronze + silver + gold
  bronze.add(silver,fill_value=0).add(gold,fill_value=0)
  
### Appending & concatenating Series
  result = s1.append(s2)
  result2 = pd.concat([s1,s2])
  result3 = pd.concat([s1,s2],ignore_index=True)

### Appending & concatenating DataFrames
  -- appending straight is equivalent to union operation
  pd.concat([population,unemployment],axis=1) -- horizontal stacking by index
  
### Concatenation, keys & Multiindexes
  rain1314 = pd.concat([rain2013,rain2014],keys=[2013,2014],axis=0)
  rain1314 = pd.concat([rain2013,rain2014],keys=[2013,2014],axis='columns')
  rain_dic = {2013:rain2013, 2014:rain2014}
  rain1134 = pd.concat(rain_dict,axis='columns')

### Outer & inner joins
  pd.concat([df1,df2],axis=1,join='inner')
  pd.concat([df1,df2],axis=1,join='outer')

### Merging DataFrames (Merge extends concat)
  pd.merge(population, cities)
  pd.merge(bronze, gold) -- use all common columns to merge
  pd.merge(bronze, gold, on='NOC') -- use NOC only
  pd.merge(bronze, gold, on=['NOC','Country'] - use multiple
  pd.merge(bronze, gold, on=['NOC','Country'], suffixes=['_b','_g']
  pd.merge(counties, cities, left_on='CITY NAME', right_on='CITY')
  
  pd.merge(bronze, gold, on=['NOC','Country'], suffixes=['_b','_g'], how='right')
  population.join(unemployment) -- left join by default, by index
  population.join(unemployment, how='right') -- or 'inner', 'outer'
  
  df1.append(df2)
  pd.concat([df1,df2])
  df1.join(df2)
  pd.merge(df1,df2)
  
### Ordered merges
  pd.merge_ordered(hardware, software) -- outer and sort
  pd.merge_ordered(stock, gdp, on='Date', fill_method = 'ffill')
  
  
### Reading a serie of files and combine them
  import pandas as pd
  medals_dict = {}
  for year in editions['Edition']:
      file_path = 'summer_{:d}.csv'.format(year)
      medals_dict[year] = pd.read_csv(file_path)
      medals_dict[year] = medals_dict[year][['Athlete','NOC','Medal']]
      medals_dict[year]['Edition'] = year
  medals = pd.concat(medals_dict,ignore_index=True)
  
###

  
  
  
  



  
  
